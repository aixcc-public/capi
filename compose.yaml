---
services:
  dind:
    image: docker:24-dind
    command: ["dockerd", "-H", "tcp://0.0.0.0:2375", "--tls=false", "--storage-driver=overlay2"]
    restart: always
    privileged: true
    expose:
      - "2375"
    volumes:
      - "shared-tmp:/tmp"
    environment:
      - DOCKER_TLS_CERTDIR # intentionally blank to optimize runtime
  redis:
    image: redis:6
    expose:
      - "6379"
    healthcheck:
      test: redis-cli ping
      interval: 1s
      retries: 30
  create-worker-redis-user:
    image: redis:6
    command:
      - redis-cli
      - -h
      - redis
      - ACL
      - SETUSER
      - worker-00000000-0000-0000-0000-000000000000
      - ">secret"
      - on
      - +@read
      - "~arq:*00000000-0000-0000-0000-000000000000*"
      - +@write
      - "~arq:*00000000-0000-0000-0000-000000000000*"
      - +@write
      - "~arq:abort"
      - +publish
      - "~channel:audit"
      - +publish
      - "~channel:results"
      - +@transaction
      - +@connection
      - +info
    depends_on:
      redis:
        condition: service_healthy
  postgres:
    image: "postgres:16"
    # this makes postgres log queries
    # command: ["postgres", "-c", "log_statement=all"]
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    expose:
      - "5432"
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=capi
      - POSTGRES_DB=capi
  azureblob:
    image: mcr.microsoft.com/azure-storage/azurite
    command: ["azurite", "--blobHost", "0.0.0.0"]
    expose:
      - "10000"
    healthcheck:
      test: nc 127.0.0.1 10000 -z
      interval: 1s
      retries: 30
  capi_job_status:
    build:
      context: .
    tty: true
    restart: always
    configs:
      - source: capi
        target: /etc/capi/config.yaml
    environment:
      - MODE=monitor
      - AIXCC_REDIS_HOST=redis
      - AIXCC_WORKER_HEALTH_CHECK_INTERVAL=30
  capi:
    build:
      context: .
    tty: true
    restart: always
    ports:
      - "8082:8080"
    volumes:
      - "./capi_logs:/var/log/capi"
      - "./cp_root:/cp_root"
    configs:
      - source: capi
        target: /etc/capi/config.yaml
    environment:
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - AIXCC_AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azureblob:10000/devstoreaccount1;
      - AIXCC_CP_ROOT=/cp_root
      - AIXCC_DATABASE_HOST=postgres
      - AIXCC_DATABASE_NAME=capi
      - AIXCC_DATABASE_PASSWORD=secret
      - AIXCC_DATABASE_PORT=5432
      - AIXCC_DATABASE_USERNAME=capi
      - AIXCC_REDIS_HOST=redis
    env_file:
      - path: ./env
        required: true
    depends_on:
      azureblob:
        condition: service_healthy
  capi_worker:
    build:
      context: .
    tty: true
    restart: always
    volumes:
      - "shared-tmp:/tmp"
      - "./cp_root:/cp_root"
    configs:
      - source: capi
        target: /etc/capi/config.yaml
    environment:
      - MODE=worker
      - AIXCC_WORKER_ID=00000000-0000-0000-0000-000000000000
      - AIXCC_FLATFILE_DIR=/tmp
      - AIXCC_CP_ROOT=/cp_root
      - AIXCC_REDIS_HOST=redis
      - AIXCC_REDIS_USERNAME=worker-00000000-0000-0000-0000-000000000000
      - AIXCC_REDIS_PASSWORD=secret
      - DOCKER_HOST=tcp://dind:2375
    env_file:
      - path: ./env
        required: true
    depends_on:
      create-worker-redis-user:
        condition: service_completed_successfully
  capi_background:
    build:
      context: .
    tty: true
    restart: always
    volumes:
      - "./capi_logs:/var/log/capi"
    configs:
      - source: capi
        target: /etc/capi/config.yaml
    environment:
      - MODE=background
      - WEB_CONCURRENCY=$WEB_CONCURRENCY
      - AIXCC_AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azureblob:10000/devstoreaccount1;
      - AIXCC_CP_ROOT=/cp_root
      - AIXCC_DATABASE_HOST=postgres
      - AIXCC_DATABASE_NAME=capi
      - AIXCC_DATABASE_PASSWORD=secret
      - AIXCC_DATABASE_PORT=5432
      - AIXCC_DATABASE_USERNAME=capi
      - AIXCC_REDIS_HOST=redis
  loadtest:
    profiles:
      - loadtest
    build:
      context: loadtest
      dockerfile: Dockerfile
    command:
      - run
      - script.js
      - --verbose
    environment:
      - AIXCC_API_HOSTNAME=http://capi:8080
    depends_on:
      capi:
        condition: service_healthy
volumes:
  shared-tmp:
  pgdata:
configs:
  capi:
    file: ./standard_config.yaml
